<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Testlo.Styles">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#FFFF8000"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FFFFE6CC"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFFFB76E"/>

    <Style x:Key="ButtonTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="/Testlo;component/Fonts/#Raleway"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundVisual" Fill="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PressedVisual" Fill="{DynamicResource Button.Pressed.Background}" Opacity="0"/>
                        <Rectangle x:Name="PF" Fill="{DynamicResource Button.Pressed.Foreground}" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisual" Fill="{DynamicResource Button.Disabled.Background}" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Button.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

</ResourceDictionary>